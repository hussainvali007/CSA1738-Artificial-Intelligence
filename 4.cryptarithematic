from itertools import permutations

# Function to check if a solution is valid
def is_valid_solution(s, e, n, d, m, o, r, y):
    send = 1000 * s + 100 * e + 10 * n + d
    more = 1000 * m + 100 * o + 10 * r + e
    money = 10000 * m + 1000 * o + 100 * n + 10 * e + y
    return send + more == money

# Function to solve the cryptarithmetic problem
def solve_cryptarithmetic():
    letters = 'SENDMORY'
    digits = '0123456789'
    
    for perm in permutations(digits, len(letters)):
        s, e, n, d, m, o, r, y = map(int, perm)
        
        # Leading characters cannot be zero
        if s == 0 or m == 0:
            continue
        
        if is_valid_solution(s, e, n, d, m, o, r, y):
            return {
                'S': s, 'E': e, 'N': n, 'D': d,
                'M': m, 'O': o, 'R': r, 'Y': y
            }
    return None

solution = solve_cryptarithmetic()
if solution:
    print("Solution found:")
    for letter, digit in solution.items():
        print(f"{letter} = {digit}")
else:
    print("No solution found.")
\
